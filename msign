#!/bin/sh

# msign $msg
# mencrypt $msg

# Produce signed/encrypted message on stdout
# Meant to be invoked from mcom(1), a part of mblaze

MBLAZE=${MBLAZE-$HOME/.mblaze}
cmd=$(mhdr -h EncryptCmd "$MBLAZE/profile")
[ -z "${cmd}" ] && cmd=${MENCRYPT_CMD-gpg}

[ $# -eq 0 ] && {
	echo usage: $(basename $0) msgfile
	exit 1
}

warn () {
	echo "$*" 1>&2
}

f=$1
tmp=$(dirname $(dirname $f))/tmp/$(basename $f)
cat $f | \
  perl -lpe 'if ($_ =~ /^--text follows this line--$/) { print "\n" }' > $tmp
mv $tmp $f

recipients () {
	typeset f recips
	f=$1
	shift
	recips=""
	recips=$(mhdr -h to:cc:bcc $f | while read recip; do
		echo " -r '${recip}'"
	done)
	echo ${recips}
}

opts=
dash_r=$(recipients $f)
#warn "dash_r=${dash_r}"
case "$0" in
	*msign*)
		opts="--sign --clearsign --armor"
		;;
	*mencrypt*)
		opts="--encrypt --armor"
		;;
	*)
		echo $0: 'what?'
		exit 1
		;;
esac

head_tmp=${f}.htmp
mshow -q -H $f > ${head_tmp}
echo '' >> ${head_tmp}
hdr_lines=$(cat ${head_tmp} | wc -l)
body_tmp=${f}.btmp
mshow -r -H $f | sed -e "1,${hdr_lines}d" > ${body_tmp}
mshow -q $f 1>&2
warn "=============================="
warn "${cmd} ${opts} ${dash_r} ${f}.btmp"
eval "${cmd} ${opts} ${dash_r} ${f}.btmp" || {
	warn "${cmd} ${opts} failed"
	exit 1
}
cat ${head_tmp} ${f}.btmp.asc
rm -f ${f}.btmp.asc ${f}.[hb]tmp
exit 0
